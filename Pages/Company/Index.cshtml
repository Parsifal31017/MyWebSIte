@page
@model MyWebSite.Pages.Company.IndexModel

@{
    ViewData["Title"] = "Company";
}

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<div class="container-fluid">
    <div class="container">
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="col-md-12">
                        <h1>@Localizer["Company"]</h1>

                        <p>
                            <a asp-page="Create">@Localizer["Create"]</a>
                        </p>

                        <form asp-page="./Index" method="get">
                            <div class="form-actions no-color">
                                <p>
                                    @Localizer["Search:"]
                                    <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                                    <input type="submit" value="Search" class="btn btn-primary" /> |
                                    <a asp-page="./Index">@Localizer["Back to list"]</a>
                                </p>
                            </div>
                        </form>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>
                                            <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                                               asp-route-currentFilter="@Model.CurrentFilter">
                                                @Html.DisplayNameFor(model => model.Company[0].Title)
                                            </a>
                                        </th>
                                        <th>
                                            <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                                               asp-route-currentFilter="@Model.CurrentFilter">
                                                @Html.DisplayNameFor(model => model.Company[0].Rank)
                                            </a>
                                        </th>
                                        <th>
                                            <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                                               asp-route-currentFilter="@Model.CurrentFilter">
                                                @Html.DisplayNameFor(model => model.Company[0].EnrollmentDate)
                                            </a>
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Company)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Title)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Rank)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EnrollmentDate)
                                            </td>
                                            <td>
                                                <a asp-page="./Edit" asp-route-id="@item.ID">@Localizer["Edit"]</a> |
                                                <a asp-page="./Details" asp-route-id="@item.ID">@Localizer["Details"]</a> |
                                                <a asp-page="./Delete" asp-route-id="@item.ID">@Localizer["Delete"]</a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@{
    var prevDisabled = !Model.Company.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Company.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Company.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    @Localizer["Previous"]
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Company.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    @Localizer["Next"]
</a>